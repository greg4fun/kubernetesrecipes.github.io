---
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Cta from "@components/cta.astro";
---

<Layout title="Chapters">
  <Container>
    <Sectionhead>
      <Fragment slot="title">Chapters Overview</Fragment>
      <Fragment slot="desc">
        Explore <strong>Kubernetes Recipes</strong> — practical, hands-on chapters that tackle real-world Kubernetes challenges. Click each chapter to expand and discover concrete takeaways.
      </Fragment>
    </Sectionhead>

    <div class="max-w-3xl mx-auto mt-16 space-y-4 text-slate-700 text-lg leading-relaxed">
      <div class="bg-slate-100 p-6 rounded-lg border text-base text-slate-800">
        <h2 class="text-xl font-semibold mb-2">Introduction</h2>
        <p>
          <em>Kubernetes Recipes</em> is designed to bridge the gap between "hello world" demos and production-grade Kubernetes engineering.
          Whether you're deploying on bare metal, cloud, or hybrid infrastructure, these chapters offer bite-sized, practical guides to tackle
          the real challenges faced by developers and operators. This book emphasizes reproducible patterns, modern tooling, and community-aligned best practices.
        </p>
        <p class="mt-2">
          Each chapter is standalone, so you can jump to what matters most for your workflow or stack. Think of it as your hands-on field manual to the cloud-native ecosystem.
        </p>
      </div>

      <!-- Chapter 1 -->
      <details class="border rounded-lg p-4">
        <summary class="font-semibold cursor-pointer">Chapter&nbsp;1: Getting Started</summary>
        <p class="mt-2 font-semibold">Launch a cluster—anywhere, in minutes</p>
        <ul class="list-disc ml-6 mt-2 space-y-1">
          <li>One-command installs of <code>kubectl</code>, k3s, Minikube and KinD on every OS.</li>
          <li>Walk-throughs for HA, hybrid and Raspberry Pi clusters so you can learn on real hardware, not simulations.</li>
          <li>Quick wins: dashboard setup, kubeconfig tips and first deployment.</li>
        </ul>
      </details>

      <!-- Chapter 2 -->
      <details class="border rounded-lg p-4">
        <summary class="font-semibold cursor-pointer">Chapter&nbsp;2: Configuring Stateless Applications</summary>
        <p class="mt-2 font-semibold">Ship lightweight services with zero friction</p>
        <ul class="list-disc ml-6 mt-2 space-y-1">
          <li>Namespaces, multi-container Pods and JSON patches from first principles to production patterns.</li>
          <li>Built-in resource-limit recipes keep noisy neighbours in check.</li>
          <li>Secrets, distroless &amp; enterprise-grade images for rock-solid, secure builds.</li>
        </ul>
      </details>

      <!-- Chapter 3 -->
      <details class="border rounded-lg p-4">
        <summary class="font-semibold cursor-pointer">Chapter&nbsp;3: Configuring Stateful Applications</summary>
        <p class="mt-2 font-semibold">Databases and data that survive pod restarts</p>
        <ul class="list-disc ml-6 mt-2 space-y-1">
          <li>Hands-on PostgreSQL with PVCs, backups and migrations.</li>
          <li>Patterns for polyglot micro-services and CI/CD of stateful workloads.</li>
          <li>Proven strategies to tame complexity and resource waste in legacy stacks.</li>
        </ul>
      </details>

      <!-- Chapter 4 -->
      <details class="border rounded-lg p-4">
        <summary class="font-semibold cursor-pointer">Chapter&nbsp;4: Kubernetes on Cloud Providers</summary>
        <p class="mt-2 font-semibold">Go multi-cloud without vendor lock-in</p>
        <ul class="list-disc ml-6 mt-2 space-y-1">
          <li>GKE Autopilot, AKS, EKS, DigitalOcean &amp; more—step-by-step via CLI or Terraform.</li>
          <li>CNCF conformance tricks to guarantee workload portability.</li>
        </ul>
      </details>

      <!-- Chapter 5 -->
      <details class="border rounded-lg p-4">
        <summary class="font-semibold cursor-pointer">Chapter&nbsp;5: Developer Experience</summary>
        <p class="mt-2 font-semibold">Code, test, debug—no YAML fatigue</p>
        <ul class="list-disc ml-6 mt-2 space-y-1">
          <li>Super-charge the CLI (aliases, krew), Helm &amp; Kustomize for repeatable flows.</li>
          <li>Lens IDE, DevSpace hot-reloading and VS Code integration for instant inner-loop feedback.</li>
        </ul>
      </details>

      <!-- Chapter 6 -->
      <details class="border rounded-lg p-4">
        <summary class="font-semibold cursor-pointer">Chapter&nbsp;6: Scaling &amp; Resiliency</summary>
        <p class="mt-2 font-semibold">Scale to infinity, stay online</p>
        <ul class="list-disc ml-6 mt-2 space-y-1">
          <li>HPA, VPA, Cluster-/Event-driven autoscaling, Karpenter and KEDA in real use cases.</li>
          <li>Zero-downtime rollout recipes (blue-green, canary, surge, vCluster).</li>
          <li>PodTopologySpread &amp; control-plane hardening for fault domains you can trust.</li>
        </ul>
      </details>

      <!-- Chapter 7 -->
      <details class="border rounded-lg p-4">
        <summary class="font-semibold cursor-pointer">Chapter&nbsp;7: Storage</summary>
        <p class="mt-2 font-semibold">Persistent data, the cloud-native way</p>
        <ul class="list-disc ml-6 mt-2 space-y-1">
          <li>CSI vs in-tree drivers, dynamic vs static provisioning, and regional disks on GKE.</li>
          <li>End-to-end walkthroughs for NFS, EFS, Azure Disks &amp; more.</li>
        </ul>
      </details>

      <!-- Chapter 8 -->
      <details class="border rounded-lg p-4">
        <summary class="font-semibold cursor-pointer">Chapter&nbsp;8: Networking</summary>
        <p class="mt-2 font-semibold">Traffic, security &amp; observability on the wire</p>
        <ul class="list-disc ml-6 mt-2 space-y-1">
          <li>From first LoadBalancer to fine-grained NetworkPolicies and Ingress with Istio, Cert-Manager &amp; ExternalDNS.</li>
          <li>Battle-tested checklists for debugging CNI, iptables/nftables and service connectivity.</li>
        </ul>
      </details>

      <!-- Chapter 9 -->
      <details class="border rounded-lg p-4">
        <summary class="font-semibold cursor-pointer">Chapter&nbsp;9: Performance Observability</summary>
        <p class="mt-2 font-semibold">See everything, troubleshoot fast</p>
        <ul class="list-disc ml-6 mt-2 space-y-1">
          <li>Unified stack: Metrics-Server, Prometheus, Grafana, ELK, Jaeger, OpenTelemetry &amp; more—ready to copy-paste.</li>
          <li>Patterns for SLOs, red/black dashboards and load-testing with Locust &amp; Vegeta.</li>
        </ul>
      </details>

      <!-- Chapter 10 -->
      <details class="border rounded-lg p-4">
        <summary class="font-semibold cursor-pointer">Chapter&nbsp;10: Control-Plane Admin &amp; Helm</summary>
        <p class="mt-2 font-semibold">Operate clusters like a pro</p>
        <ul class="list-disc ml-6 mt-2 space-y-1">
          <li>Deep dive into API-server, etcd, schedulers and node life-cycle (drain, cordon, upgrade).</li>
          <li>Helm powerhouse: private repos, plugins and production rollbacks in one place.</li>
        </ul>
      </details>

      <!-- Chapter 11 -->
      <details class="border rounded-lg p-4">
        <summary class="font-semibold cursor-pointer">Chapter&nbsp;11: Security</summary>
        <p class="mt-2 font-semibold">Shift-left, lock-down, sleep-well</p>
        <ul class="list-disc ml-6 mt-2 space-y-1">
          <li>External &amp; native secrets, Pod Security Admission, AppArmor, Seccomp and RBAC walk-throughs.</li>
          <li>Service-mesh-driven mTLS, cert rotation and fine-grained policy with Istio.</li>
        </ul>
      </details>

      <!-- Chapter 12 -->
      <details class="border rounded-lg p-4">
        <summary class="font-semibold cursor-pointer">Chapter&nbsp;12: Emerging &amp; Advanced Concepts</summary>
        <p class="mt-2 font-semibold">Future-proof your platform</p>
        <ul class="list-disc ml-6 mt-2 space-y-1">
          <li>FaaS on K8s, eBPF &amp; Cilium, WASM modules, HPC, AI/ML pipelines and air-gapped DevOps.</li>
          <li>Extend the API with CRDs, webhooks and FeatureGates without forking Kubernetes.</li>
        </ul>
      </details>

      <!-- Chapter 13 -->
      <details class="border rounded-lg p-4">
        <summary class="font-semibold cursor-pointer">Chapter&nbsp;13: Best Practices</summary>
        <p class="mt-2 font-semibold">From good to great in production</p>
        <ul class="list-disc ml-6 mt-2 space-y-1">
          <li>Declarative GitOps, capacity planning, health-checks, immutable images and cost controls distilled into checklists.</li>
        </ul>
      </details>

      <!-- Chapter 14 -->
      <details class="border rounded-lg p-4">
        <summary class="font-semibold cursor-pointer">Chapter&nbsp;14: Additional Resources</summary>
        <p class="mt-2 font-semibold">Stay plugged into the community</p>
        <ul class="list-disc ml-6 mt-2 space-y-1">
          <li>CNCF landscape, contributing guidelines, KubeCon, TAG Sustainability and the business case for cloud-native.</li>
        </ul>
      </details>
    </div>
    <Cta />
  </Container>
</Layout>
